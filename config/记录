encrypt.key
2HIK)'d&+}iIA0eBz2hMBClWy>9,%(

8.17 
派件1687,机器人724，共享160

8.16
派件：1582
机器人派件：359
共享：256

万科id：e90d7310-959c-4948-bf09-c67e93600848

--站点id：88704463  测试

--站点id：88702977  万科

中海id：210a8c51-9044-4db9-9c80-4407ecb0ca05

--站点id：88704039

天安云谷五栋id：e296745d-9873-402e-b1f3-dd6d5b7fc737

--站点id：88702894

卓越前海壹号id：9ca30119-4502-4ac0-bb85-6d207cf137c4

--站点id:88704656

华润id：2388aae8-51a8-4ea6-bf64-196acefba832

--站点id：88705707

 

（4）当前需要更新的

天安云谷id：8e530a0b-5eca-4440-a03a-307cb6bb9005

--站点id：88705855
天安云谷五栋id：e296745d-9873-402e-b1f3-dd6d5b7fc737

--站点id：88705856


1.聚光有到站记录，递易没到站记录
产生原因：
（1）递易在签收后，推送入库消息，会在递易那边产生新的订单，在山竺生活app上会显示新建的订单，订单状态只有入库，不会显示之前的完整的操作流程
（2）递易在退回后，重新入库也会产生新的数据，在山竺生活app上会显示新建的订单，订单状态只有入库，不会显示之前的完整的操作流程

2.聚光没到站记录，递易有到站记录
产生原因：
（1）19号没有轨迹的数据是因为我们这边的服务器在早上9点到10点的时候，部分事件请求无响应，导致记录轨迹丢失
（2）19号之前的数据是，因为递易推送的到站数据在入库数据之后，我们这边不接受订单状态的回滚，所以轨迹上显示的订单状态都是入库中，且入库3次

3.聚光有入库记录，递易没入库记录
产生原因：
（1）在递易签收后，再做一次签收，递易会产生一条新记录，最新的记录只有一条签收记录
（2）递易在签收后，推送到站消息，会在递易那边产生新的订单，在山竺生活app上会显示新建的订单，订单状态只有到站，不会显示之前的完整的操作流程
（3）18号部分数据到站2次的数据，递易推送正常，但是出现这种情况需要看山竺生活上的截图  例如：3120657166503

4.聚光没入库记录，递易有入库记录
产生原因：
（1）递易将到站和入库一起推送过来，导致产生轨迹的事件出现问题。异常只在13号的一段时间内出现。 （处理方法：已经修改解决，后续不会出现）

5.聚光有出库记录，递易没出库记录
产生原因：
（1）16到19号系统在异常的时候，会导致我们这边没有产生推送到第一的签收推送。 （处理方法：数据已经进行补推送，后续不会出现）
（2）12号的数据，是因为那天的版本我们这边没有接受递易在签收后的数据，看递易推送的数据是因为签收后，继续做了到站或着入库

6.聚光有出库记录，递易没出库记录
（1）都是退回的数据 ，不知道递易怎么处理的

这个是文档里面数据的解释，在其他园区出现的情况也是这样的。还有2边数据不一致的产生原因，
（1）在递易那边在签收后的后续推送会在递易那边统计2条，在我们这边只统计一条
（2）在递易识别单号的时候，成功率是97%，会识别错单号，导致我们这边会多一条无头无尾，找不到对应快递的数据


8.23
添加索引
db.getCollection('dispatch_orderTrace').createIndex({"orderId":1})
db.getCollection('logistics_order_trace').createIndex({"orderId":1})
db.getCollection('delivery_user_address').createIndex({"mobile":1,"houseNumberId":1,"deleted":1})
db.getCollection('dispatch_order').createIndex({"hiveId":1,"installedHive":1,"deleted":1})
db.getCollection('dispatch_order').createIndex({"orderNumber":1,"logisticsOrderId":1,"installedHive":1,"deleted":1})

db.getCollection('logistics_order').createIndex({"hubId":1,"createdTime":-1,"deleted":1})

工作记录：
（1）迁移园区定位到park
（2）迁移logistics到park调用delivery
（3）修改装箱判断到运单层
（4）修改事件通知
（5）旧数据的迁移
（6）地址库的处理

园区是否显示在app和小程序

园区加上短信和电话的接口

重要紧急
团餐短信发送记录

导出访问

8.26
解决了线上奔溃的问题
一次奔溃
发现线程池爆满
发现是事件推送多个事件产生的多个线程，且长时间未关闭
将线上线程进行线程池分组，找到出问题的事件通知线程
解决io流未关闭的问题
二次奔溃
网页能进行查询操作，但是数据无法进行修改
检查线程正常
检查慢查询，发现出现大量查询需要30s以上
大量更新语句需要先查询再更新，且查询语句遍历全表，未加索引
添加索引后没有超过100ms未解决的查询或更新解决问题


8.27
修改订单号和手机号只有输入超过四位才进行查询

8.30

导出问题
INTERNAL_SERVER_ERROR
返回数据时要做快照处理
mongo全部查出来在内存内进行排序，默认32m 推荐用索引处理

到站时间
入库时间
签收时间

8.31
替换字段
db.getCollection('logistics_order').find({
    "$and": [
                {
                    "arrivedPhoto": {
                        "$regex": "http://cti-delivery-service-pro.oss-cn-shenzhen-internal.aliyuncs.com",
                        "$options": "i"
                    }
                }
            ]
    }).forEach(function(rep){
        a = rep.arrivedPhoto;
        print("原字段："+a)        
        b = a.replace('http://cti-delivery-service-pro.oss-cn-shenzhen-internal.aliyuncs.com', "https://cti-delivery-service-pro.cn-shenzhen.oss.aliyuncs.com");//将“m”替换为“&&&&”
        print("替换后："+b);
        //rep.arrivedPhoto=b;
        //db.getCollection("logistics_order").update({_id:rep._id},{$set:{arrivedPhoto:b}}); 
})



目标完成：
1.对接第三方接口完成开发新派件配送功能
2.开发团餐备餐功能
3.开发园区用户权限功能。

工作质量：
编写派件流程文档，与前端对接和测试提出的问题及时处理，快速响应并解决上线后派件功能在园区落地产生的问题，让现场的运营人员可以更好的使用开发出来的产品。

综合表现：
在按时完成安排的任务下，提前规划下个版本变更的功能，响应并解决系统使用时产生的问题，并对问题进行记录，避免问题的重复产生。


9.8

ALTER TABLE "park_zone" ADD "app_enabled" bool ;
ALTER TABLE "park_zone" ADD "applet_enabled" bool ;


9.9
递易订单，根据id和订单号，修改用户手机

